AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploys a Grafana workspace with a custom dashboard and a Glue table for Athena queries.

Resources:
  ###############################
  #           Kinesis           #
  ###############################
  DatazoomFirehoseIAMUser:
      Type: 'AWS::IAM::User'
      Properties:
        Policies:
          - PolicyName: 'FirehoseUserPolicy'
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - firehose:ListDeliveryStreams
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - firehose:*
                  Resource: !GetAtt KinesisFirehoseStream.Arn

  KinesisServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'KinisisServiceRolePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${AWS::StackName}-logs/*'
                  - !Sub 'arn:aws:s3:::${AWS::StackName}-logs'
              - Effect: Allow
                Action:
                  - 'kinesis:DescribeStream'
                  - 'kinesis:GetShardIterator'
                  - 'kinesis:GetRecords'
                  - 'kinesis:ListShards'
                Resource: !Sub 'arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/PUT-S3-${AWS::StackName}'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:GetFunctionConfiguration'
                Resource: !GetAtt KinesisFormattingFunction.Arn

  KinesisLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-logs"

  KinesisFormattingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda-functions/kinisis-formatting/
      Handler: handler.lambda_handler
      Role: !GetAtt KinesisServiceRole.Arn
      Runtime: python3.12
      Timeout: 60

  KinesisLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/kinesisfirehose/PUT-S3-${AWS::StackName}"

  KinesisLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Sub "/aws/kinesisfirehose/PUT-S3-${AWS::StackName}"
      LogStreamName: "DestinationDelivery"
    DependsOn: KinesisLogGroup

  KinesisFirehoseStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub "PUT-S3-${AWS::StackName}"
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Sub "/aws/kinesisfirehose/PUT-S3-${AWS::StackName}"
          LogStreamName: "DestinationDelivery"
        BucketARN: !GetAtt KinesisLogsBucket.Arn
        RoleARN: !GetAtt KinesisServiceRole.Arn
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 5
        ErrorOutputPrefix: errors/
        Prefix: datazoom-connector/
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Type: Lambda
              Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt KinesisFormattingFunction.Arn

  ###############################
  #            Glue             #
  ###############################
  GlueServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: GlueServiceRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${AWS::StackName}-logs/datazoom-connector/*'

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref AWS::StackName

  GlueTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabase
      TableInput:
        Name: !Sub "${AWS::StackName}-glue-table"
        TableType: EXTERNAL_TABLE
        StorageDescriptor:
          Columns:
            - Name: configuration_id
              Type: string
              Comment: ""
            - Name: event_id
              Type: string
              Comment: ""
            - Name: event
              Type: struct<type:string,timestamp:timestamp,metrics:struct<engagement_duration_ms:int,event_count:int,num_requests_content:int,num_content_plays:int,num_errors:int,num_errors_content:int,pause_duration_content_ms:int,time_since_last_rendition_change_ms:int,time_since_last_heartbeat_ms:int,time_since_last_milestone_content_ms:int,time_since_request_content_ms:int,time_since_started_content_ms:int,time_since_last_pause_ms:int,time_since_last_buffer_start_content_ms:int,stall_count_content:int,player_state:string,stall_duration_content_ms:int,buffer_duration_content_ms:int,stall_duration_ms:int,stall_count:int,playback_duration_promo_ms:int,playback_duration_content_ms:int,time_since_last_stall_start_content_ms:int,time_since_last_milestone_ad_ms:int,bandwidth_kbps:int,pause_duration_ms:int,time_since_last_buffer_start_ad_ms:int,time_since_last_stall_start_ms:int,time_since_last_stall_start_ad_ms:int,time_since_last_seek_start_ms:int,playback_duration_ms:int,buffer_duration_ms:int,time_since_last_buffer_start_ms:int,content_session_start_ts_ms:bigint,player_viewable:boolean,playback_rate:int,playhead_position_sec:double,current_audio_track:string,buffer_length_ms:int,volume_level_percent:int,player_viewable_percent:int,rendition_video_bitrate_kbps:int,rendition_width:int,rendition_name:string,rendition_height:int,playhead_pdt_sec:double,num_ad_plays:int,time_since_last_ad_break_start_ms:int,time_since_last_ad_completed_ms:int,stall_duration_ads_ms:int,time_since_last_request_ad_ms:int,pause_duration_ads_ms:int,buffer_duration_ads_ms:int,playback_duration_ads_ms:int,time_since_last_started_ad_ms:int,stall_count_ads:int,num_errors_ads:int,playback_duration_ad_session_ms:int,num_ad_break_plays:int>,attributes:struct<error_msg:string,error_code:string,startup_duration_content_ms:int,startup_duration_total_ms:int,heartbeat_count:int,abs_shift:string,qualified_view_sec:int,seek_start_point_ms:int,seek_end_point_ms:int>>
              Comment: ""
            - Name: user_details
              Type: struct<app_session_id:string,app_session_start_ts_ms:bigint,client_ip:string,user_agent:string,content_session_id:string>
              Comment: ""
            - Name: device
              Type: struct<browser_name:string,device_id:string,os_version:string,cookies_enabled:boolean,os_name:string,browser_width:int,device_type:string,browser_version:string,browser_height:int>
              Comment: ""
            - Name: geo_location
              Type: struct<continent:string,country_code:string,country:string,city:string,latitude:double,timezone_offset:int,timezone_name:string,continent_code:string,postal_code:string,region:string,region_code:string,longitude:double>
              Comment: ""
            - Name: network
              Type: struct<mobile_connection:boolean,isp:string,asn:string,asn_org:string>
              Comment: ""
            - Name: page
              Type: struct<page_url:string,dz_sdk_version:string,site_domain:string,page_title:string,referrer_url:string>
              Comment: ""
            - Name: ad
              Type: struct<ad_blocker:boolean,ad_id:string,wrapper_creative_ids:array<string>,ad_creative_id:string,skip_time_offset_sec:int,ad_position:string,wrapper_id:array<string>,ad_break_id:string,ad_duration_sec:int,ad_time_offset_sec:int,ad_session_id:string,wrapper_systems:array<string>,ad_system:string>
              Comment: ""
            - Name: ops_metadata
              Type: struct<client_ts_ms:bigint,duplicate:boolean,player_context_id:string>
              Comment: ""
            - Name: player
              Type: struct<player_version:string,player_name:string,subtitles:boolean,streaming_protocol:string,controls:boolean,default_playback_rate:int,preload:string,default_muted:boolean,autostart:boolean,fullscreen:boolean,loop:boolean,ready_state:int,streaming_type:string,muted:boolean,casting:boolean>
              Comment: ""
            - Name: video
              Type: struct<media_type:string,duration_sec:int,source:string,player_height:int,player_width:int>
              Comment: ""
          Location: !Sub "s3://${AWS::StackName}-logs/datazoom-connector/"
          InputFormat: "org.apache.hadoop.mapred.TextInputFormat"
          OutputFormat: "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"
          SerdeInfo:
            SerializationLibrary: "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
        PartitionKeys:
          - Name: partition_0
            Type: string
            Comment: "Partition (0)"
          - Name: partition_1
            Type: string
            Comment: "Partition (1)"
          - Name: partition_2
            Type: string
            Comment: "Partition (2)"

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref AWS::StackName
      Role: !GetAtt GlueServiceRole.Arn
      DatabaseName: !Ref GlueDatabase
      Targets:
        S3Targets:
          - Path: !Sub "${AWS::StackName}-logs/datazoom-connector/"
      Schedule:
        ScheduleExpression: "cron(0 */6 * * ? *)"

  ###############################
  #           Athena            #
  ###############################
  AthenaWorkGroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: !Ref AWS::StackName
      RecursiveDeleteOption: true
      State: ENABLED
      WorkGroupConfiguration:
        BytesScannedCutoffPerQuery: 100000000
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: true
        ResultConfiguration:
          OutputLocation: !Sub 's3://aws-athena-query-results-${AWS::Region}-${AWS::AccountId}/'

  ###############################
  #           Grafana           #
  ###############################
  GrafanaConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-grafana-config"

  GrafanaDeploymentLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: GrafanaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "grafana:CreateWorkspaceServiceAccount"
                  - "grafana:DeleteWorkspaceServiceAccount"
                  - "grafana:CreateWorkspaceServiceAccountToken"
                Resource: !Sub "arn:aws:grafana:${AWS::Region}:${AWS::AccountId}:/workspaces/${AmazonGrafanaWorkspace.Id}"

  GrafanaDashboardDeploymentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-dashboard-deployment"
      Runtime: python3.12
      CodeUri: src/lambda-functions/dashboard-deployment/
      Handler: handler.lambda_handler
      Role: !GetAtt GrafanaDeploymentLambdaRole.Arn
      Timeout: 10
      Environment:
        Variables:
          TEMPLATE_PATH: "./dashboard-template.json"
          GRAFANA_ENDPOINT: !Sub "https://${AmazonGrafanaWorkspace.Id}.grafana-workspace.${AWS::Region}.amazonaws.com"
          GLUE_TABLE_NAME: !Sub "${AWS::StackName}-glue-table"
          WORKSPACE_ID: !GetAtt AmazonGrafanaWorkspace.Id

  DashboardCreationCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt GrafanaDashboardDeploymentFunction.Arn
      ServiceTimeout: 60
    DependsOn: AmazonGrafanaWorkspace

  GrafanaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: grafana.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GrafanaAthenaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "athena:ListDatabases"
                  - "athena:ListDataCatalogs"
                  - "athena:ListWorkGroups"
                  - "athena:GetDatabase"
                  - "athena:GetDataCatalog"
                  - "athena:GetQueryExecution"
                  - "athena:GetQueryResults"
                  - "athena:GetTableMetadata"
                  - "athena:GetWorkGroup"
                  - "athena:ListTableMetadata"
                  - "athena:StartQueryExecution"
                  - "athena:StopQueryExecution"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "glue:GetDatabase"
                  - "glue:GetDatabases"
                  - "glue:GetTable"
                  - "glue:GetTables"
                  - "glue:GetPartition"
                  - "glue:GetPartitions"
                  - "glue:BatchGetPartition"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "s3:GetBucketLocation"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:ListMultipartUploadParts"
                  - "s3:AbortMultipartUpload"
                  - "s3:PutObject"
                Resource:
                  - !Sub 'arn:aws:s3:::aws-athena-query-results-${AWS::Region}-${AWS::AccountId}'
                  - !Sub 'arn:aws:s3:::aws-athena-query-results-${AWS::Region}-${AWS::AccountId}/*'
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource:
                  - !Sub 'arn:aws:s3:::${AWS::StackName}-logs/*'
                  - !Sub 'arn:aws:s3:::${AWS::StackName}-logs'

  AmazonGrafanaWorkspace:
    Type: AWS::Grafana::Workspace
    Properties:
      Name: !Ref AWS::StackName
      AccountAccessType: CURRENT_ACCOUNT
      AuthenticationProviders:
        - AWS_SSO
      PermissionType: SERVICE_MANAGED
      GrafanaVersion: 10.4
      RoleArn: !GetAtt GrafanaIAMRole.Arn
      DataSources:
        - ATHENA
      PluginAdminEnabled: true
